{"version":3,"sources":["containers/MapBox/index.js","components/ButtonSelect/index.js","components/FileInput/index.js","utils/schedule.js","utils/misc.js","components/FeatureSideBar/index.js","containers/NavBar/index.js","store/solution/selectors.js","store/settings/types.js","store/settings/actions.js","store/solution/types.js","store/solution/actions.js","App.js","store/settings/reducer.js","store/solution/reducer.js","store/reducers.js","index.js","store/index.js"],"names":["dataLayer","id","type","source","paint","dataLayerInactive","beforeId","dataLayerBorder","Mapbox","state","activeVehicles","routes","routesInactive","uniqueHosts","hoveredFeature","mapStyle","version","sources","tiles","tileSize","layers","minzoom","maxzoom","viewport","latitude","longitude","zoom","bearing","pitch","_handleViewportChange","width","height","setState","_onHover","ev","features","srcEvent","offsetX","offsetY","find","f","layer","x","y","_onClick","setActiveFeature","props","activeFeature","properties","vehicle","_getCursor","cursorState","isDragging","isHovering","this","className","style","left","top","day","week","showAllRoutes","hosts","interactiveLayerIds","onViewportChange","onHover","onClick","getCursor","data","_renderTooltip","nextProps","a1","a2","prev","cur","activeFilter","vehicleColors","vehicleData","vehicles","vehiclesPerDay","vehiclesPerWeek","length","every","a","includes","inactiveVehicles","forEach","v","i","push","map","geometry","Polyline","toGeoJSON","color","findIndex","vpd","vpw","Component","colourStyles","control","styles","backgroundColor","option","isDisabled","isFocused","isSelected","chroma","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove","ButtonSelect","colors","isActive","title","handleChange","onChange","formatData","value","label","Array","isArray","_","i2","isMulti","name","options","ops","FileInput","e","clickHandler","target","files","htmlFor","text","N_WORKDAYS","NamedWeeks","from","NamedDays","resolveTime","time","hours","days","weeks","resolvedWeek","Math","floor","resolvedDay","resolvedHour","moment","duration","minutes","MAX_HUE","MIN_HUE","MAX_SAT","MIN_SAT","MAX_LIT","MIN_LIT","MAX_DISTANCE","genRandomColor","cHue","cSat","cLit","isDistinct","hue","sat","lit","abs","parsedColors","c","split","start","middle","end","Number","parseInt","random","FeatureSideBar","isOpen","customBurgerIcon","pageWrapId","outerContainerId","onStateChange","noOverlay","right","steps","pickup","s","job","host","perMonth","perWeek","nContainers","nPickups","key","arrival","prevState","prevId","prevType","loadingContent","timeCalc","active","isEnd","filter","earliest","sort","stepsA","stepsB","latest","NavBar","loadSolution","solutionStatus","setDays","vehiclesByDays","vehiclesByWeeks","daysByVehicles","weeksByVehicles","setVehicles","setWeeks","setShowRoutes","activeDays","activeWeeks","emptyContent","WEEK","DAY","VEHICLE","checked","reduce","acc","distance","distanceCalc","capacityCalc","hostsCalc","momentDur","durationCalc","getVehiclesByWeeks","flat","getVehiclesByDays","getDaysByVehicles","Set","vp","getWeeksByVehicles","vw","Filters","setFilter","payload","dispatch","getState","solution","flatMap","w","daysFromWeeks","d","weeksFromDays","LoadStatus","setStatus","file","status","inputFile","Promise","resolve","reject","tempFileReader","FileReader","onerror","abort","onload","JSON","parse","result","readAsText","then","vroom","meta","output","vehicleCount","weekColors","dayColors","vd","genVehicleColors","catch","err","console","error","App","settings","connect","SolutionSelectors","SettingsActions","feature","SolutionActions","initialState","rootReducer","combineReducers","store","createStore","reducer","applyMiddleware","thunk","initStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a236391.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport MapGL, { Layer, Source } from 'react-map-gl';\n\nimport Polyline from '@mapbox/polyline';\n\nimport './style.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst arrayEquals = (a1, a2) => a1.length === a2.length && a1.every(a => a2.includes(a));\n\nconst dataLayer = {\n  id: 'data',\n  type: 'line',\n  source: 'routes',\n  paint: {\n    'line-width': 3,\n    // Use a get expression (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-get)\n    // to set the line-color to a feature property value.\n    'line-color': ['get', 'color']\n  }\n};\n\nconst dataLayerInactive = {\n  id: 'dataInactive',\n  type: 'line',\n  beforeId: 'data',\n  source: 'routesInactive',\n  paint: {\n    'line-width': 3,\n    'line-color': '#000000'\n  }\n};\n\nconst dataLayerBorder = {\n  id: 'dataBorder',\n  beforeId: 'data',\n  type: 'line',\n  source: 'routes',\n  paint: {\n    'line-width': 5,\n    'line-color': '#000000'\n  }\n};\n\nexport default class Mapbox extends Component {\n  state = {\n    activeVehicles: [],\n    routes: null,\n    routesInactive: null,\n    uniqueHosts: null,\n\n    // Map Config\n    hoveredFeature: null,\n    mapStyle: {\n      version: 8,\n      sources: {\n        'raster-tiles': {\n            type: 'raster',\n            tiles: [\n              'https://tile.osm.org/{z}/{x}/{y}.png'\n            ],\n            tileSize: 256\n        }\n      },\n      layers: [{\n          id: \"test\",\n          type: \"raster\",\n          source: \"raster-tiles\",\n          minzoom: 0,\n          maxzoom: 22\n      }]\n    },\n    viewport: {\n      latitude: 40,\n      longitude: -7,\n      zoom: 4,\n      bearing: 0,\n      pitch: 0\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, { activeVehicles: prev }) {\n    const {\n      activeVehicles: cur,\n      activeFilter,\n      vehicleColors,\n      vehicles: vehicleData,\n      vehiclesPerDay,\n      vehiclesPerWeek\n    } = nextProps;\n\n    if (cur && cur.length > 0 && vehicleData && vehicleData.length > 0 &&\n      !arrayEquals(cur, prev) ) {\n        // const vehicles = vehicleData.filter((_, i) => cur.includes(i));\n        const vehicles = [];\n        const inactiveVehicles = [];\n\n        vehicleData.forEach((v, i) => {\n          if (cur.includes(i)) {\n            vehicles.push(v);\n          } else {\n            inactiveVehicles.push(v);\n          }\n        })\n\n        const routes = {\n          type: 'FeatureCollection',\n          features: vehicles.map(v => ({\n            type: 'Feature',\n            geometry: Polyline.toGeoJSON(v.geometry),\n            properties: {\n              vehicle: v.vehicle,\n              color: vehicleColors[v.vehicle][activeFilter],\n              day: vehiclesPerDay.findIndex(vpd => vpd.includes(v.vehicle)),\n              week: vehiclesPerWeek.findIndex(vpw => vpw.includes(v.vehicle))\n            }\n          }))\n        };\n\n        const routesInactive = {\n          type: 'FeatureCollection',\n          features: inactiveVehicles.map(v => ({\n            type: 'Feature',\n            geometry: Polyline.toGeoJSON(v.geometry),\n            properties: {\n              vehicle: v.vehicle,\n              day: vehiclesPerDay.findIndex(vpd => vpd.includes(v.vehicle)),\n              week: vehiclesPerWeek.findIndex(vpw => vpw.includes(v.vehicle))\n            }\n          }))\n        };\n\n        return {\n          activeVehicles: cur,\n          routes,\n          routesInactive\n        };\n      }\n\n    return null;\n  }\n\n  _handleViewportChange = ({ width, height, ...viewport }) => this.setState({ viewport: { ...this.state.viewport, ...viewport } });\n\n  _onHover = ev => {\n    const {\n      features,\n      srcEvent: { offsetX, offsetY }\n    } = ev;\n\n    const hoveredFeature = features && features.find(f => f.layer.id === 'data' || f.layer.id === 'dataInactive');\n\n    this.setState({ hoveredFeature, x: offsetX, y: offsetY });\n  }\n\n  _onClick = ev => {\n    const { features } = ev;\n    const { setActiveFeature } = this.props;\n    const activeFeature = features && features.find(f => f.layer.id === 'data' || f.layer.id === 'dataInactive');\n\n    if (activeFeature) {\n      setActiveFeature({ type: 'vehicle', id: activeFeature.properties.vehicle });\n    } else {\n      setActiveFeature();\n    }\n  }\n\n  _getCursor = cursorState => {\n    const { isDragging, isHovering } = cursorState;\n\n    return isDragging ?\n      'grabbing'\n      : isHovering ?\n      'pointer' : 'default'\n  }\n  \n  _renderTooltip() {\n    const {hoveredFeature, x, y} = this.state;\n\n    return (\n      hoveredFeature && (\n        <div className=\"tooltip\" style={{left: x, top: y}}>\n          <div>Vehicle: {hoveredFeature.properties.vehicle + 1}</div>\n          <div>Day: {hoveredFeature.properties.day + 1}</div>\n          <div>Week: {hoveredFeature.properties.week + 1}</div>\n        </div>\n      )\n    );\n  }\n\n  render() {\n    const {\n      mapStyle,\n      routes,\n      routesInactive,\n      viewport\n    } = this.state;\n\n    const { hosts, showAllRoutes } = this.props\n\n    return (\n      <div id=\"map\">\n        <MapGL\n          mapStyle={mapStyle}\n          height='100%'\n          width='100%'\n          interactiveLayerIds={[dataLayer.id, ...(showAllRoutes ? [dataLayerInactive.id] : [])]}\n          onViewportChange={this._handleViewportChange}\n          onHover={this._onHover}\n          onClick={this._onClick}\n          getCursor={this._getCursor}\n          {...viewport}>\n            <Source id='routes' type='geojson' data={routes}>\n              <Layer {...dataLayer} />\n              <Layer {...dataLayerBorder} />\n            </Source>\n            {\n              showAllRoutes ?\n                <Source id='routesInactive' type='geojson' data={routesInactive}>\n                  <Layer {...dataLayerInactive} />\n                </Source>\n                : null\n            }\n            {this._renderTooltip()}\n        </MapGL>\n      </div>\n    );\n  }\n};","import React from 'react';\nimport Select from 'react-select';\nimport chroma from 'chroma-js';\n\nimport './style.css';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = chroma(data.color);\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color.alpha(0.1).css()\n        : null,\n      color: isDisabled\n        ? '#ccc'\n        : isSelected\n        ? chroma.contrast(color, 'white') > 2\n          ? 'white'\n          : 'black'\n        : data.color,\n      cursor: isDisabled ? 'not-allowed' : 'default',\n\n      ':active': {\n        ...styles[':active'],\n        backgroundColor: !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\n      },\n    };\n  },\n  multiValue: (styles, { data }) => {\n    const color = chroma(data.color);\n    return {\n      ...styles,\n      backgroundColor: color.alpha(0.1).css(),\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    color: data.color,\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    color: data.color,\n    ':hover': {\n      backgroundColor: data.color,\n      color: 'white',\n    },\n  }),\n};\n\nconst ButtonSelect = (props) => {\n  const {\n    data,\n    colors,\n    isActive,\n    title,\n    onChange: handleChange\n  } = props;\n\n  const formatData = data.map((v, i) => ({ value: i, label: i + 1, color: Array.isArray(v) ? colors.find((_, i2) => v.includes(i2)) : colors[i] }));\n\n  return (\n    <div className='ButtonSelect'>\n      <span onClick={() => handleChange(data.map((_, i) => i))} className={`ButtonSelect-Title ${isActive && 'active'}`}>{title}</span>\n\n      <Select\n        styles={colourStyles}\n        isMulti\n        name={title}\n        options={formatData}\n        onChange={ops => handleChange(ops && ops.length > 0 ? ops.map(({ value }) => value) : data.map((_, i) => i))}\n        />\n    </div>\n  );\n}\n\nexport default ButtonSelect;","import React, { Fragment } from 'react';\n\nimport './style.css';\n\nconst FileInput = (props) => {\n  return (\n    <Fragment>\n      <input\n        id=\"file\"\n        className=\"FileInput\"\n        name=\"file\"\n        type=\"file\"\n        onChange={e => props.clickHandler(e.target.files[0])}/>\n      <label htmlFor=\"file\">{props.text}</label>\n    </Fragment>\n  );\n}\n\nexport default FileInput;","import moment from 'moment';\n\nconst N_WORKDAYS = 5;\nconst N_WEEKS = 4;\n\nconst NamedWeeks = Array.from({ length: N_WEEKS}, (_, i) => `Week ${i + 1}`);\nconst NamedDays = [\n  'Mon',\n  'Tue',\n  'Wed',\n  'Thu',\n  'Fri'\n];\n\n/**\n * Resolves array of day indices for given week indices array\n * \n * @param {Number[]} weeks\n *    [0, 2] = first week, third week days => [0..4, 10..14]\n *    [1, 3] = second week, fourth week days => [5..9, 15..19]\n */\nexport function daysFromWeeks(weeks) {\n  return weeks.flatMap(w => Array.from({ length: N_WORKDAYS }, (_, i) => i + w * 5));\n}\n\n/**\n * Resolves array of unique week indices for given days indices array\n * \n * @param {Number[]} days \n *    [0, 1, 2, 10, 11] => first week, third week => [0, 2]\n *    [5, 8, 15] = second week, fourth week => [1, 3]\n */\nexport function weeksFromDays(days) {\n  return Array.from(new Set(days.map(d => Math.floor(d / N_WORKDAYS))));\n}\n\n/**\n * Resolve \n * @param {*} time \n */\nexport function resolveTime(time) {\n  let hours = time / 60 / 60;\n  let days = hours / 24;\n  let weeks = days / N_WORKDAYS;\n\n  if (days > N_WORKDAYS) {\n\n  }\n\n  if (days > 1) {\n    hours = hours % 24;\n  }\n\n  if (weeks > 1) {\n    days = days % N_WORKDAYS;\n  }\n\n  const resolvedWeek = NamedWeeks[Math.floor(weeks)];\n  const resolvedDay = NamedDays[Math.floor(days)];\n  const resolvedHour = `${moment.duration(hours, 'hours').hours()}h${moment.duration(hours, 'hours').minutes()}m`;\n  \n  return `${resolvedWeek}, ${resolvedDay} - ${resolvedHour}`;\n}","const MAX_HUE = 360;\nconst MIN_HUE = 0;\nconst MAX_SAT = 100;\nconst MIN_SAT = 80;\nconst MAX_LIT = 70;\nconst MIN_LIT = 40;\nconst MAX_DISTANCE = 25;\n\n/**\n * Generates a random color\n *  if colors is given, then attempts to generate a distinct color from those\n * \n * @param {} colors existant color dataset\n */\nexport function genRandomColor(colors) {\n  const isDistinct = ({ hue, sat, lit }, { cHue, cSat, cLit}) => {\n    const distHue = Math.abs( hue - cHue);\n    const distSat = Math.abs( sat - cSat);\n    const distLit = Math.abs( lit - cLit);\n\n    return (distHue + distSat + distLit) > MAX_DISTANCE;\n  };\n\n  const parsedColors = colors.map(c => {\n    const [start, middle, end] = c.split(',');\n    \n    return {\n      hue: Number.parseInt(start.split('hsl(')[1]),\n      sat: Number.parseInt(middle),\n      lit: Number.parseInt(end)\n    };\n  });\n\n\n  let cHue, cSat, cLit;\n  do {\n    cHue = Math.floor(Math.random() * (MAX_HUE - MIN_HUE) + MIN_HUE);\n    cSat = Math.floor(Math.random() * (MAX_SAT - MIN_SAT) + MIN_SAT);\n    cLit = Math.floor(Math.random() * (MAX_LIT - MIN_LIT) + MIN_LIT);\n\n  } while(!parsedColors.every(c => isDistinct(c, { cHue, cSat, cLit })));\n\n  return `hsl(${cHue}, ${cSat}%, ${cLit}%)`;\n}","import React, { Component, Fragment } from 'react';\nimport { slide as Menu } from 'react-burger-menu';\n\nimport { resolveTime } from '../../utils';\n\nimport './style.css';\n\nexport default class FeatureSideBar extends Component {\n  state = {\n    isOpen: false,\n    type: null,\n    id: null\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { activeFeature } = nextProps;\n    const { id, type } = activeFeature;\n    const { prevId, prevType } = prevState;\n\n    if (type !== prevType && id !== prevId) {\n      return { isOpen: true, id, type };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      activeFeature,\n      vehicles,\n      hosts,\n      setActiveFeature\n    } = this.props;\n\n    return (\n      <Menu\n        customBurgerIcon={false}\n        isOpen={this.state.isOpen}\n        pageWrapId={'main-content'}\n        outerContainerId={'App'}\n        onStateChange={({ isOpen }) => !isOpen && setActiveFeature()}\n        noOverlay\n        right >\n\n        <h1>\n          <span className='SideBar-Title'>{activeFeature.type}</span>\n          {activeFeature.id + 1}\n        </h1>\n        <div className='SideBar-Stats'>\n          {\n            activeFeature.type === 'vehicle' ?\n              <Fragment>\n                <span>\n                  Hosts: {vehicles[activeFeature.id].steps.length - 2} | \n                </span>\n                <span>\n                  Capacity: {vehicles[activeFeature.id].pickup[0]} / 21\n                </span>\n              </Fragment>\n              : null\n          }\n        </div>\n        <ul>\n          {\n            activeFeature.type === 'vehicle' ?\n            vehicles[activeFeature.id].steps.map((s, i) => {\n              const {\n                host,\n                pickup,\n                perMonth,\n                perWeek,\n                nContainers,\n                nPickups\n              } = s.type === 'job' && hosts[s.job];\ndebugger;\n              return (\n                <li className='FeatureVehicle' key={i}>\n                  {\n                    s.type !== 'job' ?\n                      <Fragment>\n                        <div className='FeatureVehicle-Title'>{s.type}</div>\n                        <small><b>Arrival: </b>{resolveTime(s.arrival)}</small>\n                      </Fragment> :\n                      <Fragment>\n                        <div className='FeatureVehicle-Title'>\n                          {host}\n                          <small>{perMonth}{perMonth === 7 ? `.${perWeek}` : null }</small>\n                        </div>\n                        <small><b># Containers: </b>{nContainers}</small>\n                        <br />\n                        <small><b>Pickup Nr: </b>{pickup + 1} / {nPickups}</small>\n                        <br />\n                        <small><b>Arrival: </b>{resolveTime(s.arrival)}</small>\n                      </Fragment>\n                  }\n                </li>\n              );\n            })\n            : activeFeature.type === 'host' ?\n              <Fragment>\n              </Fragment>\n            : null\n          }\n        </ul>\n\n    </Menu>\n    );\n  }\n}","import React, { Fragment } from 'react';\n\nimport moment from 'moment';\n\nimport { ButtonSelect, FileInput } from '../../components';\n\nimport { resolveTime } from '../../utils';\n\nimport './style.css';\n\nconst loadingContent = (\n  <p>Loading...</p>\n);\n\nconst emptyContent = loadSolution => (\n  <Fragment>\n    <FileInput text='Load Solution' clickHandler={loadSolution} />\n  </Fragment>\n);\n\nconst distanceCalc = (vehicles, active) => {\n  const activeVehicles = vehicles.filter(v => active.includes(v.vehicle));\n\n  return activeVehicles.reduce((acc, v) => acc + v.distance, 0);\n}\n\nconst capacityCalc = (vehicles, active) => {\n  const activeVehicles = vehicles.filter(v => active.includes(v.vehicle));\n\n  return activeVehicles.reduce((acc, v) => acc + v.pickup[0], 0);\n}\n\nconst timeCalc = (vehicles, active, isEnd = false) => {\n  const activeVehicles = vehicles.filter(v => active.includes(v.vehicle));\n  const earliest = activeVehicles.sort(({steps: stepsA}, {steps: stepsB}) => stepsA[0].arrival - stepsB[0].arrival)[0];\n  const latest = activeVehicles.sort(({steps: stepsA}, {steps: stepsB}) => stepsB[stepsB.length - 1].arrival - stepsA[stepsA.length - 1].arrival)[0];\n\n  if (!earliest || !latest) {\n    return 0;\n  }\n\n  const { arrival } = isEnd ? latest.steps[latest.steps.length - 1] : earliest.steps[0];\n\n  return arrival;\n}\n\nconst hostsCalc = (vehicles, active) => {\n  const activeVehicles = vehicles.filter(v => active.includes(v.vehicle));\n\n  return activeVehicles.reduce((acc, v) => acc + v.steps.length - 2, 0);\n}\n\nconst durationCalc = (vehicles, active) => {\n  const activeVehicles = vehicles.filter(v => active.includes(v.vehicle));\n  const duration = activeVehicles.reduce((acc, v) => acc + v.duration, 0);\n  const momentDur = moment.duration(duration, 's');\n  const days = momentDur.days();\n  const hours = momentDur.hours();\n  const minutes = momentDur.minutes();\n\n  //return `${momentDur.days()}d:${momentDur.hours()}h:${momentDur.minutes()}m`\n  return `${days ? days + 'd' : ''} ${hours ? hours + 'h' : ''} ${minutes ? minutes + 'm' : ''}`\n}\n\nconst NavBar = (props) => {\n  const {\n    loadSolution,\n    solutionStatus,\n    vehiclesPerDay,\n    vehiclesPerWeek,\n    vehicles,\n\n    // Selectors\n    vehiclesByDays,\n    vehiclesByWeeks,\n    daysByVehicles,\n    weeksByVehicles,\n\n    // Setters\n    setDays,\n    setVehicles,\n    setWeeks,\n    setShowRoutes,\n\n    // Filters\n    activeFilter,\n    activeVehicles,\n    activeDays,\n    activeWeeks,\n    showAllRoutes,\n    vehicleColors\n  } = props;\n\n  return (\n    <header className='NavBar'>\n      {\n        (solutionStatus === 'EMPTY' && emptyContent(loadSolution)) ||\n        (solutionStatus === 'LOADING' && loadingContent) ||\n        <Fragment>\n          <div className='NavBar-Controls'>\n            <ButtonSelect title='Weeks' isActive={activeFilter === 'WEEK'}\n              data={vehiclesPerWeek} colors={vehicleColors.map(({ WEEK }) => WEEK)} onChange={setWeeks} />\n\n            <ButtonSelect title='Days' isActive={activeFilter === 'DAY'}\n              data={vehiclesPerDay} colors={vehicleColors.map(({ DAY }) => DAY)} onChange={setDays} />\n\n            <ButtonSelect title='Vehicles' isActive={activeFilter === 'VEHICLE'}\n              data={vehicles} colors={vehicleColors.map(({ VEHICLE }) => VEHICLE)} onChange={setVehicles} />\n\n            <div>\n              <label>\n              <input\n                name='showAllRoutes'\n                type='checkbox'\n                checked={showAllRoutes}\n                onChange={({ target }) => setShowRoutes(target.checked)}\n                />\n                Show inactive routes\n              </label>\n            </div>\n          </div>\n            \n          <div className='NavBar-Stats'>\n            <span className='NavBar-StatsField'>\n              <label>Vehicles:</label>\n              <span>{activeVehicles.length}</span>\n            </span>\n            <span className='NavBar-StatsField'>\n              <label>Distance:</label>\n              <span>{`${distanceCalc(vehicles, activeVehicles) / 1000 } Km`}</span>\n            </span>\n            <span className='NavBar-StatsField'>\n              <label>Capacity:</label>\n              <span>{capacityCalc(vehicles, activeVehicles)}</span>\n            </span>\n            <span className='NavBar-StatsField'>\n              <label>Hosts:</label>\n              <span>{hostsCalc(vehicles, activeVehicles)}</span>\n            </span>\n            <span className='NavBar-StatsField'>\n              <label>Start:</label>\n              <span>{resolveTime(timeCalc(vehicles, activeVehicles))}</span>\n            </span>\n            <span className='NavBar-StatsField'>\n              <label>End:</label>\n              <span>{resolveTime(timeCalc(vehicles, activeVehicles, true))}</span>\n            </span>\n            <span className='NavBar-StatsField'>\n              <label>Duration:</label>\n              <span>{durationCalc(vehicles, activeVehicles)}</span>\n            </span>\n          </div>\n        </Fragment>\n      }\n    </header>\n  );\n}\n\nexport default NavBar;","export const getVehiclesByWeeks = (state, weeks) => {\n  const vehicles = state.vehiclesPerWeek.filter((_, i) => weeks.includes(i));\n\n  return vehicles.flat();\n}\n\nexport const getVehiclesByDays = (state, days) => {\n  const vehicles = state.vehiclesPerDay.filter((_, i) => days.includes(i));\n\n  return vehicles.flat();\n}\n\nexport const getDaysByVehicles = (state, vehicles) => {\n  const days = new Set(vehicles.map(v => state.vehiclesPerDay.find(vp => vp.includes(v))));\n\n  return Array.from(days);\n};\n\nexport const getWeeksByVehicles = (state, vehicles) => {\n  const weeks = new Set(vehicles.map(v => state.vehiclesPerWeek.find(vw => vw.includes(v))));\n\n  return Array.from(weeks);\n};","export const SET_FILTER = 'SET_FILTER';\nexport const SET_VEHICLE_COLORS = 'SET_VEHICLE_COLORS';\nexport const SET_ACTIVE_FEATURE = 'SET_ACTIVE_FEATURE';\nexport const SET_SHOW_ROUTES = 'SET_SHOW_ROUTES';\n\nexport const Filters = {\n  WEEK: 'WEEK',\n  DAY: 'DAY',\n  VEHICLE: 'VEHICLE'\n};\n","import { daysFromWeeks, weeksFromDays, genRandomColor } from '../../utils';\nimport {\n  getVehiclesByWeeks,\n  getVehiclesByDays,\n  getWeeksByVehicles,\n  getDaysByVehicles\n} from '../solution/selectors';\n\nimport {\n  SET_ACTIVE_FEATURE,\n  SET_FILTER,\n  SET_VEHICLE_COLORS,\n  Filters,\n  SET_SHOW_ROUTES\n} from './types';\n\nconst setFilter = (activeDays, activeWeeks, activeFilter, activeVehicles) => ({\n  type: SET_FILTER,\n  payload: {\n    activeDays,\n    activeWeeks,\n    activeFilter,\n    activeVehicles\n  }\n});\n\nexport const setShowRoutes = showAllRoutes => (dispatch) => {\n  return dispatch({\n    type: SET_SHOW_ROUTES,\n    payload: { showAllRoutes }\n  });\n}\n\nexport const setActiveFeature = feature => (dispatch) => {\n  if (!feature) {\n    return dispatch({\n      type: SET_ACTIVE_FEATURE,\n      payload: null\n    });\n  }\n  const { type, id } = feature;\n\n  return dispatch({\n    type: SET_ACTIVE_FEATURE,\n    payload: { type, id }\n  });\n}\n\nexport const genVehicleColors = (vehiclesPerDay, vehiclesPerWeek, vehicleCount) => (dispatch) => {\n  \n  const weekColors = vehiclesPerWeek.reduce((acc, _) => {\n    acc.push(genRandomColor(acc));\n    return acc;\n  }, []);\n  const dayColors = vehiclesPerDay.reduce((acc, _) => {\n    acc.push(genRandomColor(acc));\n    return acc;\n  }, []);\n  const vehicleColors = Array.from({ length: vehicleCount }, (_, i) => i).reduce((acc, v) => {\n    const week = vehiclesPerWeek.findIndex(vw => vw.includes(v));\n    const day = vehiclesPerDay.findIndex(vd => vd.includes(v));\n\n    acc.push({\n      [Filters.DAY]: dayColors[day],\n      [Filters.WEEK]: weekColors[week],\n      [Filters.VEHICLE]: genRandomColor(acc.map(({ VEHICLE: vc }) => vc ))\n    });\n\n    return acc;\n  }, []);\n  \n  return dispatch({\n    type: SET_VEHICLE_COLORS,\n    payload: { vehicleColors }\n  });\n}\n\nexport const setWeeks = weeks => (dispatch, getState) => {\n  const activeVehicles = getVehiclesByWeeks(getState().solution, weeks);\n  const activeDays = daysFromWeeks(weeks);\n  const activeFilter = Filters.WEEK;\n\n  return dispatch(setFilter(activeDays, weeks, activeFilter, activeVehicles));\n};\n\nexport const setDays = days => (dispatch, getState) => {\n  const activeVehicles = getVehiclesByDays(getState().solution, days);\n  const activeWeeks = weeksFromDays(days);\n  const activeFilter = Filters.DAY;\n\n  return dispatch(setFilter(days, activeWeeks, activeFilter, activeVehicles));\n};\n\nexport const setVehicles = vehicles => (dispatch, getState) => {\n  const activeFilter = Filters.VEHICLE;\n  const activeDays = getDaysByVehicles(getState().solution, vehicles);\n  const activeWeeks = getWeeksByVehicles(getState().solution, vehicles);\n\n  return dispatch(setFilter(activeDays, activeWeeks, activeFilter, vehicles));\n}","export const LOAD_SOLUTION = 'LOAD_SOLUTION';\nexport const SET_STATUS = 'SET_STATUS';\n\nexport const LoadStatus = {\n  EMPTY: 'EMPTY',\n  LOADING: 'LOADING',\n  DONE: 'DONE'\n};","import { LOAD_SOLUTION, SET_STATUS, LoadStatus } from './types';\n\nimport { genVehicleColors, setWeeks } from '../settings/actions';\n\nconst readJSONFile = inputFile => new Promise((resolve, reject) => {\n    const tempFileReader = new FileReader();\n\n    tempFileReader.onerror = () => {\n      tempFileReader.abort();\n      reject('Problem parsing input file');\n    };\n\n    tempFileReader.onload = () => {\n      resolve(JSON.parse(tempFileReader.result));\n    };\n    tempFileReader.readAsText(inputFile);\n});\n\n\n// Actions\nconst setStatus = payload => ({\n  type: SET_STATUS,\n  payload\n});\n\n\n// Action Creators\nexport const loadSolution = file => (dispatch) => {\n  dispatch(setStatus({ status: LoadStatus.LOADING }));\n\n  return readJSONFile(file)\n  .then(data => {\n    const { vroom, meta } = data;\n    const { routes: vehicles } = vroom.output;\n    const { hosts, vehiclesPerDay, vehiclesPerWeek } = meta;\n\n    // Call vehicle color generation from settings actions\n    dispatch(genVehicleColors(vehiclesPerDay, vehiclesPerWeek, vehicles.length));\n\n    // dispatch(setVehicles(vehicles.map((_, i) => i)));\n    dispatch(setWeeks(vehiclesPerWeek.map((_, i) => i)))\n\n    return dispatch({\n      type: LOAD_SOLUTION,\n      payload: {\n        hosts,\n        vehicles,\n        vehiclesPerDay,\n        vehiclesPerWeek\n      }\n    });\n    })\n    .catch(err => {\n      console.error(err);\n      return dispatch(setStatus(LoadStatus.EMPTY));\n    });\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Mapbox, NavBar } from './containers';\nimport { FeatureSideBar } from './components';\nimport './App.css';\n\nimport * as SettingsActions from './store/settings/actions';\nimport * as SolutionActions from './store/solution/actions';\n\nimport * as SolutionSelectors from './store/solution/selectors';\n\nclass App extends Component {\n  state = {\n  }\n  \n  render() {\n    const {\n      settings,\n      solution,\n      loadSolution,\n\n      // Filter setters\n      setDays,\n      setVehicles,\n      setWeeks,\n      setShowRoutes,\n\n      setActiveFeature\n    } = this.props;\n\n    const {\n      status: solutionStatus,\n      vehiclesPerDay,\n      vehiclesPerWeek,\n      vehicles,\n      hosts,\n\n      // Selectors\n      getVehiclesByDays,\n      getVehiclesByWeeks,\n      getDaysByVehicles,\n      getWeeksByVehicles\n    } = solution;\n\n    const {\n      // Filters\n      activeFeature,\n      activeVehicles,\n      activeFilter,\n      activeDays,\n      activeWeeks,\n      showAllRoutes,\n      vehicleColors\n    } = settings;\n\n    return (\n      <div id='App' className=\"App\">\n        {\n          activeFeature !== null ?\n            <FeatureSideBar\n            hosts={hosts}\n            activeFeature={activeFeature}\n            vehicles={vehicles}\n            setActiveFeature={setActiveFeature} />\n            : null\n        }\n\n        <div id='main-content'>\n          <NavBar\n            solutionStatus={solutionStatus}\n            loadSolution={loadSolution}\n            setDays={setDays}\n            setVehicles={setVehicles}\n            setWeeks={setWeeks}\n            setShowRoutes={setShowRoutes}\n\n            getVehiclesByDays={getVehiclesByDays}\n            getVehiclesByWeeks={getVehiclesByWeeks}\n            getDaysByVehicles={getDaysByVehicles}\n            getWeeksByVehicles={getWeeksByVehicles}\n\n            vehiclesPerDay={vehiclesPerDay}\n            vehiclesPerWeek={vehiclesPerWeek}\n            vehicles={vehicles}\n\n            activeFilter={activeFilter}\n            activeDays={activeDays}\n            activeWeeks={activeWeeks}\n            activeVehicles={activeVehicles}\n            showAllRoutes={showAllRoutes}\n            vehicleColors={vehicleColors} />\n\n          <Mapbox\n            activeFilter={activeFilter}\n            activeVehicles={activeVehicles}\n            showAllRoutes={showAllRoutes}\n            vehicles={vehicles}\n            hosts={hosts}\n            vehicleColors={vehicleColors}\n            vehiclesPerDay={vehiclesPerDay}\n            vehiclesPerWeek={vehiclesPerWeek}\n            setActiveFeature={setActiveFeature} />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  const { settings, solution } = state;\n\n  return {\n    settings,\n    solution: {\n      getVehiclesByDays: days => SolutionSelectors.getVehiclesByDays(state, days),\n      getVehiclesByWeeks: weeks => SolutionSelectors.getVehiclesByWeeks(state, weeks),\n      getDaysByVehicles: vehicles => SolutionSelectors.getDaysByVehicles(state, vehicles),\n      getWeeksByVehicles: vehicles => SolutionSelectors.getWeeksByVehicles(state, vehicles),\n      ...solution\n    }\n  };\n};\nconst mapDispatchToProps = (dispatch, props) => ({\n  // Settings\n  setVehicles: vehicles => dispatch(SettingsActions.setVehicles(vehicles)),\n  setWeeks: weeks => dispatch(SettingsActions.setWeeks(weeks)),\n  setDays: days => dispatch(SettingsActions.setDays(days)),\n\n  setActiveFeature: feature => dispatch(SettingsActions.setActiveFeature(feature)),\n  setShowRoutes : showAllRoutes => dispatch(SettingsActions.setShowRoutes(showAllRoutes)),\n  \n  // Solution\n  loadSolution: file => dispatch(SolutionActions.loadSolution(file))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);","import {\n  SET_ACTIVE_FEATURE,\n  SET_VEHICLE_COLORS,\n  SET_SHOW_ROUTES,\n  SET_FILTER,\n  Filters\n} from './types';\n\n\nconst initialState = {\n  activeFeature: null,\n  activeFilter: Filters.WEEK,\n  activeWeeks: null,\n  activeDays: null,\n  activeVehicles: [],\n\n  showAllRoutes: false,\n  vehicleColors: []\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch(type) {\n    case SET_SHOW_ROUTES:\n      const { showAllRoutes } = payload;\n\n      return {\n        ...state,\n        showAllRoutes\n      };\n    case SET_ACTIVE_FEATURE:\n      return {\n        ...state,\n        activeFeature: payload\n      };\n    case SET_VEHICLE_COLORS:\n      const { vehicleColors } = payload;\n\n      return {\n        ...state,\n        vehicleColors\n      };\n    case SET_FILTER:\n      const { activeFilter, activeWeeks, activeDays, activeVehicles } = payload;\n\n      return {\n        ...state,\n        activeFilter,\n        activeWeeks,\n        activeDays,\n        activeVehicles\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_STATUS, LOAD_SOLUTION, LoadStatus } from './types';\n\nconst initialState = {\n  status: LoadStatus.EMPTY,\n  hosts: [],\n  vehicles: [],\n  vehiclesPerDay: [],\n  vehiclesPerWeek: []\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch(type) {\n    case SET_STATUS:\n      return { ...state, status: payload.status };\n    case LOAD_SOLUTION:\n      const { hosts, vehicles, vehiclesPerDay, vehiclesPerWeek } = payload;\n\n      return {\n        status: LoadStatus.DONE,\n        hosts,\n        vehicles,\n        vehiclesPerDay,\n        vehiclesPerWeek\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport SettingsReducer from './settings/reducer';\nimport SolutionReducer from './solution/reducer';\n\nconst rootReducer = combineReducers({\n  settings: SettingsReducer,\n  solution: SolutionReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nimport { initStore } from './store';\n\nconst store = initStore();\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport reducer from './reducers';\n\nconst isDev = process.env.NODE_ENV === 'development';\n\nexport const initStore = (initialState = {}) => {\n  return createStore(\n    reducer,\n    initialState,\n    isDev ?\n      composeWithDevTools(applyMiddleware(thunk)) :\n      applyMiddleware(thunk)\n  );\n};"],"sourceRoot":""}